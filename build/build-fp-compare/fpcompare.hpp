#include <fstream>
#include <iostream>
#include <sstream>
#include <bitset>
#include "opencv2/core/core.hpp"
#include <string>

#include <algorithm>
#include <vector>
#include <iterator>

#include <boost/program_options.hpp>


using namespace cv;
using namespace boost;
namespace po = boost::program_options;
using namespace std;


#define NUMBER_GENES				73

#define HORRIFIC_FITNESS_VALUE		1.0e12

#define FITNESS_TYPE				double
#define GENO_TYPE					bitset<NUMBER_GENES>

typedef struct
{
	uint64_t	id;
	double		area;
	uint64_t	y1, y2, y3;
	double		Y1, Y2, Y3;
} fp_volume_t;

fp_volume_t West73_Yields[] =
{
	{1,5.69,29,43,55,0.0,0.0,0.0},
	{2,28.128,60,69,78,0.0,0.0,0.0},
	{3,29.941,60,69,78,0.0,0.0,0.0},
	{4,17.068,8,17,29,0.0,0.0,0.0},
	{5,37.208,3,8,17,0.0,0.0,0.0},
	{6,41.896,3,8,17,0.0,0.0,0.0},
	{7,19.977,43,55,65,0.0,0.0,0.0},
	{8,17.68,0,3,8,0.0,0.0,0.0},
	{9,9.049,0,3,8,0.0,0.0,0.0},
	{10,12.928,92,92,92,0.0,0.0,0.0},
	{11,60.687,92,92,92,0.0,0.0,0.0},
	{12,63.081,55,65,74,0.0,0.0,0.0},
	{13,19.648,0,5,12,0.0,0.0,0.0},
	{14,55.53,17,29,43,0.0,0.0,0.0},
	{15,63.084,23,36,49,0.0,0.0,0.0},
	{16,5.604,23,36,49,0.0,0.0,0.0},
	{17,2.896,23,36,49,0.0,0.0,0.0},
	{18,21.42,0,3,8,0.0,0.0,0.0},
	{19,35.477,0,3,8,0.0,0.0,0.0},
	{20,23.226,0,3,8,0.0,0.0,0.0},
	{21,11.43,0,5,12,0.0,0.0,0.0},
	{22,22.526,0,5,12,0.0,0.0,0.0},
	{23,7.38,29,43,55,0.0,0.0,0.0},
	{24,19.599,23,36,49,0.0,0.0,0.0},
	{25,2.932,23,36,49,0.0,0.0,0.0},
	{26,41.835,36,49,60,0.0,0.0,0.0},
	{27,45.981,29,43,55,0.0,0.0,0.0},
	{28,.696,69,78,84,0.0,0.0,0.0},
	{29,11.996,69,78,84,0.0,0.0,0.0},
	{30,69.151,17,29,43,0.0,0.0,0.0},
	{31,66.031,17,29,43,0.0,0.0,0.0},
	{32,33.174,17,29,43,0.0,0.0,0.0},
	{33,50.021,43,55,65,0.0,0.0,0.0},
	{34,85.919,29,43,55,0.0,0.0,0.0},
	{35,55.73,29,43,55,0.0,0.0,0.0},
	{36,.85,43,55,65,0.0,0.0,0.0},
	{37,15.047,65,74,81,0.0,0.0,0.0},
	{38,13.989,65,74,81,0.0,0.0,0.0},
	{39,52.743,65,74,81,0.0,0.0,0.0},
	{40,3.883,0,5,12,0.0,0.0,0.0},
	{41,60.805,0,5,12,0.0,0.0,0.0},
	{42,29.699,3,8,17,0.0,0.0,0.0},
	{43,16.726,3,8,17,0.0,0.0,0.0},
	{44,34.11,92,92,92,0.0,0.0,0.0},
	{45,14.699,92,92,92,0.0,0.0,0.0},
	{46,46.272,92,92,92,0.0,0.0,0.0},
	{47,19.541,49,60,69,0.0,0.0,0.0},
	{48,62.531,49,60,69,0.0,0.0,0.0},
	{49,39.273,92,92,92,0.0,0.0,0.0},
	{50,47.416,49,60,69,0.0,0.0,0.0},
	{51,34.353,3,8,17,0.0,0.0,0.0},
	{52,3.165,3,8,17,0.0,0.0,0.0},
	{53,41.985,60,69,78,0.0,0.0,0.0},
	{54,37.832,3,8,17,0.0,0.0,0.0},
	{55,44.699,29,43,55,0.0,0.0,0.0},
	{56,39.582,29,43,55,0.0,0.0,0.0},
	{57,67.783,60,69,78,0.0,0.0,0.0},
	{58,4.285,60,69,78,0.0,0.0,0.0},
	{59,27.88,3,8,17,0.0,0.0,0.0},
	{60,39.044,43,55,65,0.0,0.0,0.0},
	{61,48.645,43,55,65,0.0,0.0,0.0},
	{62,19.469,43,55,65,0.0,0.0,0.0},
	{63,1.908,43,55,65,0.0,0.0,0.0},
	{64,.633,12,23,36,0.0,0.0,0.0},
	{65,41.532,12,23,36,0.0,0.0,0.0},
	{66,45.98,8,17,29,0.0,0.0,0.0},
	{67,82.437,8,17,29,0.0,0.0,0.0},
	{68,16.315,23,36,49,0.0,0.0,0.0},
	{69,48.27,23,36,49,0.0,0.0,0.0},
	{70,.315,49,60,69,0.0,0.0,0.0},
	{71,3.211,49,60,69,0.0,0.0,0.0},
	{72,8.533,49,60,69,0.0,0.0,0.0},
	{73,5.826,49,60,69,0.0,0.0,0.0}
};

